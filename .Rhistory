document()
library(devtools)
library(roxygen2)
document()
?dawww
document()
?dawww
dawww("smolbabe")
?cgaR
devtools::install_github("mcgregorian1/cgaR")
library(cgaR)
?cgaR
?cgaR
document()
<<<<<<< HEAD
library(devtools)
library(roxygen2)
document()
?DownloadSentinel2
documet()
document()
?DownloadSentinel2
install.packages("sen2r")
sen2r()
library(sen2r)
sen2r()
check_sen2r_deps()
sen2cor()
library(sen2r)
check_sen2r_deps()
library(sen2r)
check_sen2r_deps()
sen2cor()
sen2r()
library(sen2r)
outputDir <- "Z:/JacoryGao/Sentinel2_data/L2A_out/"
imgPath <- c("Z:/JacoryGao/Sentinel2_data/17SNA/S2A_MSIL1C_20171016T160241_N0205_R097_T17SNA_20171016T160309.SAFE",
"Z:/JacoryGao/Sentinel2_data/L1C/15RVQ/S2A_MSIL1C_20151022T170012_N0204_R026_T15RVQ_20151022T170014.SAFE")
sen2cor(l1c_prodlist = imgPath, outdir = outputDir, parallel = TRUE)
imgPath <- c("Z:/JacoryGao/Sentinel2_data/L1C/15RVQ/S2A_MSIL1C_20151022T170012_N0204_R026_T15RVQ_20151022T170014.SAFE")
sen2cor(l1c_prodlist = imgPath, outdir = outputDir, parallel = TRUE)
outputDir <- "D:/Sen/"
imgPath <- c("D:/Sen/S2A_MSIL1C_20151022T170012_N0204_R026_T15RVQ_20151022T170014.SAFE")
sen2cor(l1c_prodlist = imgPath, outdir = outputDir, parallel = TRUE)
imgPath <- c("D:/Sen/S2A_MSIL1C_20161026T165402_N0204_R026_T15RVQ_20161026T165401.SAFE")
sen2cor(l1c_prodlist = imgPath, outdir = outputDir)
sen2cor
library(sen2r)
?sen2r
sen2r()
sen2r()
knitr::opts_chunk$set(echo = TRUE)
library(rgdal)
library(sp)
library(raster)
library(RColorBrewer)
library(data.table)
# 193101
plot <- shapefile("D:/RW_data/RW19/193101/Shape files/FCP_RW19_PotStds.shp")
plot(plot)
plot <- shapefile("D:/RW_data/RW19/193101/Shape files/FCP_RW19_PotStds.shp")
# read 15RVQ
imgDir <- "D:/HLS_PhenoProduct"
tilename <- "15RVQ"
img2016 <- raster(file.path(imgDir, "2016", tilename,
paste("LSP_", tilename, "_2016_50PCGD.tif", sep="")))
img2017 <- raster(file.path(imgDir, "2017", tilename,
paste("LSP_", tilename, "_2017_50PCGD.tif", sep="")))
img2018 <- raster(file.path(imgDir, "2018", tilename,
paste("LSP_", tilename, "_2018_50PCGD.tif", sep="")))
plotReproj <- spTransform(plot, crs(img2016))
# this plot has 4 polygons, show each of them
plotRaw <- function(img, plotReproj) {
layout(matrix(1:4, nrow = 2))
for (i in 1:length(plotReproj)) {
zoomExtent <- bbox(plotReproj[i,])
plot(img, xlim=zoomExtent["x",], ylim = zoomExtent["y",], axes=F)
plot(plotReproj[i,], add=TRUE)
}
}
# === for 2016 ===
plotRaw(img2016, plotReproj)
# === for 2017 ===
plotRaw(img2017, plotReproj)
# === for 2018 ===
plotRaw(img2018, plotReproj)
plot <- shapefile("D:/RW_data/RW19/193101/Shape files/FCP_RW19_PotStds.shp")
# read 15RVQ
imgDir <- "D:/HLS_PhenoProduct"
tilename <- "15RVQ"
img2016 <- raster(file.path(imgDir, "2016", tilename,
paste("LSP_", tilename, "_2016_50PCGD.tif", sep="")))
img2017 <- raster(file.path(imgDir, "2017", tilename,
paste("LSP_", tilename, "_2017_50PCGD.tif", sep="")))
img2018 <- raster(file.path(imgDir, "2018", tilename,
paste("LSP_", tilename, "_2018_50PCGD.tif", sep="")))
plotReproj <- spTransform(plot, crs(img2016))
# this plot has 4 polygons, show each of them
plotRaw <- function(img, plotReproj) {
layout(matrix(1:4, nrow = 2))
for (i in 1:length(plotReproj)) {
zoomExtent <- bbox(plotReproj[i,])
plot(img, xlim=zoomExtent["x",], ylim = zoomExtent["y",], axes=F)
plot(plotReproj[i,], add=TRUE)
}
}
# === for 2016 ===
plotRaw(img2016, plotReproj)
# === for 2017 ===
plotRaw(img2017, plotReproj)
# === for 2018 ===
plotRaw(img2018, plotReproj)
plot <- shapefile("D:/RW_data/RW19/193101/Shape files/FCP_RW19_PotStds.shp")
# read 15RVQ
imgDir <- "D:/HLS_PhenoProduct"
tilename <- "15RVQ"
img2016 <- raster(file.path(imgDir, "2016", tilename,
paste("LSP_", tilename, "_2016_50PCGD.tif", sep="")))
img2017 <- raster(file.path(imgDir, "2017", tilename,
paste("LSP_", tilename, "_2017_50PCGD.tif", sep="")))
img2018 <- raster(file.path(imgDir, "2018", tilename,
paste("LSP_", tilename, "_2018_50PCGD.tif", sep="")))
plotReproj <- spTransform(plot, crs(img2016))
# this plot has 4 polygons, show each of them
plotRaw <- function(img, plotReproj, title=title) {
layout(matrix(1:4, nrow = 2))
for (i in 1:length(plotReproj)) {
zoomExtent <- bbox(plotReproj[i,])
plot(img, xlim=zoomExtent["x",], ylim = zoomExtent["y",], axes=F)
plot(plotReproj[i,], add=TRUE)
title("2017")
}
}
# === for 2016 ===
plotRaw(img2016, plotReproj)
plotRaw <- function(img, plotReproj, title="") {
layout(matrix(1:4, nrow = 2))
for (i in 1:length(plotReproj)) {
zoomExtent <- bbox(plotReproj[i,])
plot(img, xlim=zoomExtent["x",], ylim = zoomExtent["y",], axes=F)
plot(plotReproj[i,], add=TRUE)
title("2017")
}
}
# === for 2016 ===
plotRaw(img2016, plotReproj)
# === for 2017 ===
plotRaw(img2017, plotReproj)
# === for 2018 ===
plotRaw(img2018, plotReproj)
rwPlot <- shapefile("D:/RW_data/RW19/195501/Shape files/RW19_VDOF/rw19_measure_plots.shp")
# 17SPB
imgDir <- "D:/HLS_PhenoProduct"
tilename <- "17SPB"
img2016 <- raster(file.path(imgDir, "2016", tilename,
paste("LSP_", tilename, "_2016_50PCGD.tif", sep="")))
img2017 <- raster(file.path(imgDir, "2017", tilename,
paste("LSP_", tilename, "_2017_50PCGD.tif", sep="")))
img2018 <- raster(file.path(imgDir, "2018", tilename,
paste("LSP_", tilename, "_2018_50PCGD.tif", sep="")))
plotReproj <- spTransform(rwPlot, crs(img2016))
zoomExtent <- bbox(plotReproj)
layout(matrix(1:3, nrow = 1))
# === for 2016 ===
plot(img2016, xlim=zoomExtent["x",], ylim = zoomExtent["y",], axes=F)
plot(plotReproj, pch=20, add=TRUE)
title("2016")
# === for 2017 ===
plot(img2017, xlim=zoomExtent["x",], ylim = zoomExtent["y",], axes=F)
plot(plotReproj, pch=20, add=TRUE)
title("2017")
# === for 2018 ===
plot(img2018, xlim=zoomExtent["x",], ylim = zoomExtent["y",], axes=F)
plot(plotReproj, pch=20, add=TRUE)
title("2018")
# 17SQB
imgDir <- "D:/HLS_PhenoProduct"
tilename <- "17SQB"
img2016 <- raster(file.path(imgDir, "2016", tilename,
paste("LSP_", tilename, "_2016_50PCGD.tif", sep="")))
img2017 <- raster(file.path(imgDir, "2017", tilename,
paste("LSP_", tilename, "_2017_50PCGD.tif", sep="")))
img2018 <- raster(file.path(imgDir, "2018", tilename,
paste("LSP_", tilename, "_2018_50PCGD.tif", sep="")))
plotReproj <- spTransform(rwPlot, crs(img2016))
zoomExtent <- bbox(plotReproj)
layout(matrix(1:3, nrow = 1))
# === for 2016 ===
plot(img2016, xlim=zoomExtent["x",], ylim = zoomExtent["y",], axes=F)
plot(plotReproj, pch=20, add=TRUE)
title("2016")
# === for 2017 ===
plot(img2017, xlim=zoomExtent["x",], ylim = zoomExtent["y",], axes=F)
plot(plotReproj, pch=20, add=TRUE)
title("2017")
# === for 2018 ===
plot(img2018, xlim=zoomExtent["x",], ylim = zoomExtent["y",], axes=F)
plot(plotReproj, pch=20, add=TRUE)
title("2018")
rwPlot <- shapefile("D:/RW_data/RW19/195501/Shape files/RW19_VDOF/rw19_measure_plots.shp")
# 17SPB
imgDir <- "D:/HLS_PhenoProduct"
tilename <- "17SPB"
img2016 <- raster(file.path(imgDir, "2016", tilename,
paste("LSP_", tilename, "_2016_50PCGD.tif", sep="")))
img2017 <- raster(file.path(imgDir, "2017", tilename,
paste("LSP_", tilename, "_2017_50PCGD.tif", sep="")))
img2018 <- raster(file.path(imgDir, "2018", tilename,
paste("LSP_", tilename, "_2018_50PCGD.tif", sep="")))
plotReproj <- spTransform(rwPlot, crs(img2016))
zoomExtent <- bbox(plotReproj)
layout(matrix(1:3, nrow = 1))
# === for 2016 ===
plot(img2016, xlim=zoomExtent["x",], ylim = zoomExtent["y",], axes=F)
plot(plotReproj, pch=20, add=TRUE)
title("2016")
# === for 2017 ===
plot(img2017, xlim=zoomExtent["x",], ylim = zoomExtent["y",], axes=F)
plot(plotReproj, pch=20, add=TRUE)
title("2017")
# === for 2018 ===
plot(img2018, xlim=zoomExtent["x",], ylim = zoomExtent["y",], axes=F)
plot(plotReproj, pch=20, add=TRUE)
title("2018")
# 17SQB
imgDir <- "D:/HLS_PhenoProduct"
tilename <- "17SQB"
img2016 <- raster(file.path(imgDir, "2016", tilename,
paste("LSP_", tilename, "_2016_50PCGD.tif", sep="")))
img2017 <- raster(file.path(imgDir, "2017", tilename,
paste("LSP_", tilename, "_2017_50PCGD.tif", sep="")))
img2018 <- raster(file.path(imgDir, "2018", tilename,
paste("LSP_", tilename, "_2018_50PCGD.tif", sep="")))
plotReproj <- spTransform(rwPlot, crs(img2016))
zoomExtent <- bbox(plotReproj)
layout(matrix(1:3, nrow = 1))
# === for 2016 ===
plot(img2016, xlim=zoomExtent["x",], ylim = zoomExtent["y",], axes=F)
plot(plotReproj, pch=20, add=TRUE)
title("2016")
# === for 2017 ===
plot(img2017, xlim=zoomExtent["x",], ylim = zoomExtent["y",], axes=F)
plot(plotReproj, pch=20, add=TRUE)
title("2017")
# === for 2018 ===
plot(img2018, xlim=zoomExtent["x",], ylim = zoomExtent["y",], axes=F)
plot(plotReproj, pch=20, add=TRUE)
title("2018")
mtext("My 'Title' in a strange place", side = 3, line = -21, outer = TRUE)
layout(matrix(1:3, nrow = 1))
# === for 2016 ===
plot(img2016, xlim=zoomExtent["x",], ylim = zoomExtent["y",], axes=F)
plot(plotReproj, pch=20, add=TRUE)
title("2016")
# === for 2017 ===
plot(img2017, xlim=zoomExtent["x",], ylim = zoomExtent["y",], axes=F)
plot(plotReproj, pch=20, add=TRUE)
title("2017")
# === for 2018 ===
plot(img2018, xlim=zoomExtent["x",], ylim = zoomExtent["y",], axes=F)
plot(plotReproj, pch=20, add=TRUE)
title("2018")
mtext("My 'Title' in a strange place", side = 3, line = -21, outer = TRUE)
mtext("My 'Title' in a strange place", side = 3, outer = TRUE)
layout(matrix(1:3, nrow = 1))
# === for 2016 ===
plot(img2016, xlim=zoomExtent["x",], ylim = zoomExtent["y",], axes=F)
plot(plotReproj, pch=20, add=TRUE)
title("2016")
# === for 2017 ===
plot(img2017, xlim=zoomExtent["x",], ylim = zoomExtent["y",], axes=F)
plot(plotReproj, pch=20, add=TRUE)
title("2017")
# === for 2018 ===
plot(img2018, xlim=zoomExtent["x",], ylim = zoomExtent["y",], axes=F)
plot(plotReproj, pch=20, add=TRUE)
title("2018")
mtext("My 'Title' in a strange place", side = 3, outer = TRUE)
layout(matrix(1:3, nrow = 1))
# === for 2016 ===
plot(img2016, xlim=zoomExtent["x",], ylim = zoomExtent["y",], axes=F)
plot(plotReproj, pch=20, add=TRUE)
title("2016")
# === for 2017 ===
plot(img2017, xlim=zoomExtent["x",], ylim = zoomExtent["y",], axes=F)
plot(plotReproj, pch=20, add=TRUE)
title("2017")
# === for 2018 ===
plot(img2018, xlim=zoomExtent["x",], ylim = zoomExtent["y",], axes=F)
plot(plotReproj, pch=20, add=TRUE)
title("2018")
mtext("My 'Title' in a strange place", side = 3)
install.packages("ggplot2")
install.packages("ggmap")
library(ggplot2)
library(ggmap)
ggplot(rw19Locations)
rw19Locations <- shapefile("D:/RW_data/RW19/rw19_locations.shp")
library(rgdal)
library(rgdal)
library(sp)
library(raster)
library(rgdal)
library(sp)
library(raster)
library(RColorBrewer)
library(data.table)
library(RgoogleMaps)
library(rgdal)
library(sp)
library(raster)
library(RColorBrewer)
library(data.table)
library(RgoogleMaps)
library(ggplot2)
rw19Locations <- shapefile("D:/RW_data/RW19/rw19_locations.shp")
ggplot(rw19Locations)
ggplot(data=rw19Locations)
ggplot(data=as.data.frame(rw19Locations))
as.data.frame(rw19Locations)
ggplot(data=as.data.frame(rw19Locations), aes(coords.x1, coords.x2)) )
ggplot(data=as.data.frame(rw19Locations), aes(coords.x1, coords.x2))
ggplot(data=as.data.frame(rw19Locations), aes(coords.x1, coords.x2)) + ggpoints()
ggplot(data=as.data.frame(rw19Locations), aes(coords.x1, coords.x2)) + geom_point()
ph_basemap <- get_map(location=c(lon = -75.16522, lat = 39.95258), zoom=11, maptype = 'terrain-background', source = 'stamen')
ph_basemap <- get_map(location=c(lon = -75.16522, lat = 39.95258), zoom=11,
maptype = 'terrain-background', source = 'osm')
ph_basemap <- get_map(location=c(lon = -75.16522, lat = 39.95258), zoom=11, source = 'osm')
ph_basemap <- get_map(source = 'osm')
?register_google
ggplot(data=as.data.frame(rw19Locations), aes(coords.x1, coords.x2)) + geom_point()
+ geom_text()
ggplot(data=as.data.frame(rw19Locations), aes(coords.x1, coords.x2)) + geom_point()
+ geom_text()
ggplot(data=as.data.frame(rw19Locations), aes(coords.x1, coords.x2)) + geom_point() + geom_text()
ggplot(data=as.data.frame(rw19Locations), aes(coords.x1, coords.x2)) + geom_point() + geom_text(label="name")
ggplot(data=as.data.frame(rw19Locations), aes(coords.x1, coords.x2)) + geom_point()
+ geom_text(label="name")
ggplot(data=as.data.frame(rw19Locations), aes(coords.x1, coords.x2)) + geom_point() +
geom_text(label="name")
ggplot(data=as.data.frame(rw19Locations), aes(coords.x1, coords.x2)) + geom_point() +
geom_text(label=rw19Locations$Name)
ggplot(data=as.data.frame(rw19Locations), aes(coords.x1, coords.x2)) + geom_point() +
geom_text(label=rw19Locations$Name, position=1)
ggplot(data=as.data.frame(rw19Locations), aes(coords.x1, coords.x2)) + geom_point() +
geom_text(label=rw19Locations$Name, position="1")
ggplot(data=as.data.frame(rw19Locations), aes(coords.x1, coords.x2)) + geom_point() +
geom_text(label=rw19Locations$Name, position="bottom")
ggplot(data=as.data.frame(rw19Locations), aes(coords.x1, coords.x2)) + geom_point() +
geom_text(label=rw19Locations$Name, position="dodge")
ggplot(data=as.data.frame(rw19Locations), aes(coords.x1, coords.x2)) + geom_point() +
geom_text(label=rw19Locations$Name, position="dodge", hjust = -0.5)
ggplot(data=as.data.frame(rw19Locations), aes(coords.x1, coords.x2)) + geom_point() +
geom_text(label=rw19Locations$Name,  hjust = -0.5)
ggplot(data=as.data.frame(rw19Locations), aes(coords.x1, coords.x2)) + geom_point() +
geom_text(label=rw19Locations$Name, hjust = 0.01)
ggplot(data=as.data.frame(rw19Locations), aes(coords.x1, coords.x2)) + geom_point() +
geom_text(label=rw19Locations$Name, hjust = 0.05)
ggplot(data=as.data.frame(rw19Locations), aes(coords.x1, coords.x2)) + geom_point() +
geom_text(label=rw19Locations$Name, hjust = 0.5)
ggplot(data=as.data.frame(rw19Locations), aes(coords.x1, coords.x2)) + geom_point() +
geom_text(label=rw19Locations$Name, hjust = 0.1)
ggplot(data=as.data.frame(rw19Locations), aes(coords.x1, coords.x2)) + geom_point() +
geom_text(label=rw19Locations$Name, hjust = 0.001)
ggplot(data=as.data.frame(rw19Locations), aes(coords.x1, coords.x2)) + geom_point() +
geom_text(label=rw19Locations$Name, hjust = 0.00001)
ggplot(data=as.data.frame(rw19Locations), aes(coords.x1, coords.x2)) + geom_point() +
geom_text(label=rw19Locations$Name, hjust = 1)
ggplot(data=as.data.frame(rw19Locations), aes(coords.x1, coords.x2)) + geom_point() +
geom_text(label=rw19Locations$Name, hjust = -1)
ggplot(data=as.data.frame(rw19Locations), aes(coords.x1, coords.x2)) + geom_point() +
geom_text(label=rw19Locations$Name, hjust = -0.05)
ggplot(data=as.data.frame(rw19Locations), aes(coords.x1, coords.x2)) + geom_point() +
geom_text(label=rw19Locations$Name, hjust = -0.09)
=======
DownloadSentinel2("17SNA", "D:/", L2Flag = TRUE, rexExp = "S2\\D_MSIL\\d\\D_201([6]|[8][0][0-9]).*.SAFE/$")
#'
#' @param tilename what tile do you want to download
#' @param folder local folder used to store downloaded files
#' @param L2Flag indicate to download L2A product or L1C product (default)
#' @param regExp regular expression, with which you can specify which files you want. For example,
#' regExp <- "S2\\D_MSIL\\d\\D_201([6]|[8][0][0-9]).*.SAFE/$" means you want data from 2016 and before 2018 before October.
#' @keywords sentinel
#' @export
#' @examples
#' DownloadSentinel2("17SNA", "D:/", L2Flag = TRUE, rexExp = "S2\\D_MSIL\\d\\D_201([6]|[8][0][0-9]).*.SAFE/$")
DownloadSentinel2 <- function(tilename, folder, L2Flag = FALSE, regExp = NULL) {
gcUrl <- ifelse(L2Flag == TRUE, file.path("gs://gcp-public-data-sentinel-2/L2/tiles", substr(tilename, 1, 2),
substr(tilename, 3, 3), substr(tilename, 4, 5)),
file.path("gs://gcp-public-data-sentinel-2/tiles", substr(tilename, 1, 2),
substr(tilename, 3, 3), substr(tilename, 4, 5)))
com <- paste("gsutil ls", gcUrl)
fileList <- system(com, intern = TRUE) # View(fileList)
# create destination folder
destDir <- folder
if (dir.exists(file.path(destDir, tilename)) == FALSE) dir.create(file.path(destDir, tilename))
# regular expression filter
if (!is.null(regExp)) fileList <- grep(regExp, fileList, value = TRUE)
# started downloading
for (i in 1:length(fileList)) {
temp <- unlist(strsplit(fileList[i], "/"))
dirname <- temp[length(temp)]
if (dir.exists(file.path(destDir, tilename, dirname)) == FALSE) {
system(paste("gsutil -m cp -r", fileList[i], file.path(destDir, tilename, ".")))
}
}
}
debugSource('Q:/My Drive/github/cgaR/R/DownloadSentinel2.R')
fileList
grepl("2017", fileList)
fileList <- system(com, intern = TRUE) # View(fileList)
grepl("2017", fileList)
>>>>>>> 576da237c3fdf903713ad690d57fa6a89fd16545
